{"name": "test_profile_go_to_order_feed[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1101, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n0   chromedriver                        0x0000000104980274 cxxbridge1$str$ptr + 1907280\n1   chromedriver                        0x000000010497875c cxxbridge1$str$ptr + 1875768\n2   chromedriver                        0x000000010458c260 cxxbridge1$string$len + 89488\n3   chromedriver                        0x00000001045d5cd4 cxxbridge1$string$len + 391172\n4   chromedriver                        0x00000001045d4328 cxxbridge1$string$len + 384600\n5   chromedriver                        0x00000001045d253c cxxbridge1$string$len + 376940\n6   chromedriver                        0x00000001045d1b58 cxxbridge1$string$len + 374408\n7   chromedriver                        0x00000001045c7034 cxxbridge1$string$len + 330596\n8   chromedriver                        0x00000001045c6ad0 cxxbridge1$string$len + 329216\n9   chromedriver                        0x000000010460a7d0 cxxbridge1$string$len + 606976\n10  chromedriver                        0x00000001045c512c cxxbridge1$string$len + 322652\n11  chromedriver                        0x00000001045c5d7c cxxbridge1$string$len + 325804\n12  chromedriver                        0x0000000104948504 cxxbridge1$str$ptr + 1678560\n13  chromedriver                        0x000000010494ce6c cxxbridge1$str$ptr + 1697352\n14  chromedriver                        0x000000010492d618 cxxbridge1$str$ptr + 1568244\n15  chromedriver                        0x000000010494d73c cxxbridge1$str$ptr + 1699608\n16  chromedriver                        0x000000010491ebbc cxxbridge1$str$ptr + 1508248\n17  chromedriver                        0x0000000104969854 cxxbridge1$str$ptr + 1814576\n18  chromedriver                        0x00000001049699ac cxxbridge1$str$ptr + 1814920\n19  chromedriver                        0x00000001049783fc cxxbridge1$str$ptr + 1874904\n20  libsystem_pthread.dylib             0x0000000184f39034 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000184f33e3c thread_start + 8", "trace": "self = <tests.test_profile.TestProfile object at 0x10375f7a0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"34a61e91f3d830d96d7f1de58e244513\")>\nauthorization = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2Zjg0OWExOWVkMjgwMDAxYjRjNjYyMiIsImlhdCI6MTcyNzU0NzgwOSwiZXhwIjoxNzI3NTQ5MDA5fQ.Tk1HAR2JGiGz8LZuHPuxj8kAvSI9w0fOLuoagadW6aI'\n\n    @allure.description(\"Проверяем, что после нажатия на историю заказов осуществляется валидный переход\")\n    @pytest.mark.parametrize(\"browser\", [\"chrome\", \"firefox\"], indirect=True)\n    def test_profile_go_to_order_feed(self, browser, authorization):\n        nav_bar = NavBarHelper(browser)\n>       nav_bar.switch_tab(\"lk\")\n\ntests/test_profile.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/nav_bar.py:15: in switch_tab\n    return self.find_element(nav_bar_locator, 15).click()\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10529b020>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...000184f39034 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000184f33e3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1101, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104980274 cxxbridge1$str$ptr + 1907280\nE       1   chromedriver                        0x000000010497875c cxxbridge1$str$ptr + 1875768\nE       2   chromedriver                        0x000000010458c260 cxxbridge1$string$len + 89488\nE       3   chromedriver                        0x00000001045d5cd4 cxxbridge1$string$len + 391172\nE       4   chromedriver                        0x00000001045d4328 cxxbridge1$string$len + 384600\nE       5   chromedriver                        0x00000001045d253c cxxbridge1$string$len + 376940\nE       6   chromedriver                        0x00000001045d1b58 cxxbridge1$string$len + 374408\nE       7   chromedriver                        0x00000001045c7034 cxxbridge1$string$len + 330596\nE       8   chromedriver                        0x00000001045c6ad0 cxxbridge1$string$len + 329216\nE       9   chromedriver                        0x000000010460a7d0 cxxbridge1$string$len + 606976\nE       10  chromedriver                        0x00000001045c512c cxxbridge1$string$len + 322652\nE       11  chromedriver                        0x00000001045c5d7c cxxbridge1$string$len + 325804\nE       12  chromedriver                        0x0000000104948504 cxxbridge1$str$ptr + 1678560\nE       13  chromedriver                        0x000000010494ce6c cxxbridge1$str$ptr + 1697352\nE       14  chromedriver                        0x000000010492d618 cxxbridge1$str$ptr + 1568244\nE       15  chromedriver                        0x000000010494d73c cxxbridge1$str$ptr + 1699608\nE       16  chromedriver                        0x000000010491ebbc cxxbridge1$str$ptr + 1508248\nE       17  chromedriver                        0x0000000104969854 cxxbridge1$str$ptr + 1814576\nE       18  chromedriver                        0x00000001049699ac cxxbridge1$str$ptr + 1814920\nE       19  chromedriver                        0x00000001049783fc cxxbridge1$str$ptr + 1874904\nE       20  libsystem_pthread.dylib             0x0000000184f39034 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000184f33e3c thread_start + 8\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "description": "Проверяем, что после нажатия на историю заказов осуществляется валидный переход", "steps": [{"name": "Переключить вкладку верхнего навбара", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (1101, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n0   chromedriver                        0x0000000104980274 cxxbridge1$str$ptr + 1907280\n1   chromedriver                        0x000000010497875c cxxbridge1$str$ptr + 1875768\n2   chromedriver                        0x000000010458c260 cxxbridge1$string$len + 89488\n3   chromedriver                        0x00000001045d5cd4 cxxbridge1$string$len + 391172\n4   chromedriver                        0x00000001045d4328 cxxbridge1$string$len + 384600\n5   chromedriver                        0x00000001045d253c cxxbridge1$string$len + 376940\n6   chromedriver                        0x00000001045d1b58 cxxbridge1$string$len + 374408\n7   chromedriver                        0x00000001045c7034 cxxbridge1$string$len + 330596\n8   chromedriver                        0x00000001045c6ad0 cxxbridge1$string$len + 329216\n9   chromedriver                        0x000000010460a7d0 cxxbridge1$string$len + 606976\n10  chromedriver                        0x00000001045c512c cxxbridge1$string$len + 322652\n11  chromedriver                        0x00000001045c5d7c cxxbridge1$string$len + 325804\n12  chromedriver                        0x0000000104948504 cxxbridge1$str$ptr + 1678560\n13  chromedriver                        0x000000010494ce6c cxxbridge1$str$ptr + 1697352\n14  chromedriver                        0x000000010492d618 cxxbridge1$str$ptr + 1568244\n15  chromedriver                        0x000000010494d73c cxxbridge1$str$ptr + 1699608\n16  chromedriver                        0x000000010491ebbc cxxbridge1$str$ptr + 1508248\n17  chromedriver                        0x0000000104969854 cxxbridge1$str$ptr + 1814576\n18  chromedriver                        0x00000001049699ac cxxbridge1$str$ptr + 1814920\n19  chromedriver                        0x00000001049783fc cxxbridge1$str$ptr + 1874904\n20  libsystem_pthread.dylib             0x0000000184f39034 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000184f33e3c thread_start + 8\n\n", "trace": "  File \"/Users/mchvell/Diplom_3/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/mchvell/Diplom_3/pages/nav_bar.py\", line 15, in switch_tab\n    return self.find_element(nav_bar_locator, 15).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/mchvell/Diplom_3/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/mchvell/Diplom_3/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/mchvell/Diplom_3/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/mchvell/Diplom_3/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Найти элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//p[text()='Личный Кабинет']\")"}, {"name": "time", "value": "15"}], "start": 1727547810222, "stop": 1727547810233}], "parameters": [{"name": "nav_tab", "value": "'lk'"}], "start": 1727547810221, "stop": 1727547811296}], "parameters": [{"name": "browser", "value": "'chrome'"}], "start": 1727547810221, "stop": 1727547811297, "uuid": "ad7dc89e-8a40-4268-bcdf-ba0aa4f7a73f", "historyId": "e5a95e69727be31d99e3ffb6ba0c165f", "testCaseId": "a8a69c3501a1f85e7839b9c53b22ebf6", "fullName": "tests.test_profile.TestProfile#test_profile_go_to_order_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "mchvell-book-m2-pro.local"}, {"name": "thread", "value": "54040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_profile"}]}