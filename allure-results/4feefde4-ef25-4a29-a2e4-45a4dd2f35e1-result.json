{"name": "Проверка, что созданный заказ содержится в ленте заказов, и в истории заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Текст элемента ('xpath', \"//h2[contains(@class, 'text_type_digits-large')]\") не изменился", "trace": "browser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"7d5ca7b2-a256-4a4e-ae4e-c08cad2a8c33\")>\nauthorization = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2Zjk1NjgzOWVkMjgwMDAxYjRjN2EyMiIsImlhdCI6MTcyNzYxNjY0MywiZXhwIjoxNzI3NjE3ODQzfQ.eCAgO_vCgcmwCo-D2FYB9Wx1oTQeSTj2RILjZ5xpy54'\n\n    @allure.step(\"Создание бургера\")\n    @pytest.fixture(scope=\"function\")\n    def create_burger(browser, authorization):\n        main_page = MainPageHelper(browser)\n    \n        main_page.drag_and_drop_item(type=\"sauce\", name=\"spice_x\")\n        main_page.drag_and_drop_item(type=\"bread\", name=\"fluorescent\")\n    \n        main_page.set_tab(\"topping\")\n        main_page.drag_and_drop_item(type=\"filling\", name=\"protostomia\")\n    \n        main_page.click_on_order_button()\n>       order_no = main_page.get_order_number()\n\ntests/conftest.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:102: in get_order_number\n    self.wait_for_element_text_to_change(self.order_no, order_number_text, self.WAIT_TIME_MEDIUM)\npages/base_page.py:71: in wait_for_element_text_to_change\n    return WebDriverWait(self.driver, time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7d5ca7b2-a256-4a4e-ae4e-c08cad2a8c33\")>\nmethod = <function BasePage.wait_for_element_text_to_change.<locals>.<lambda> at 0x101b8c900>\nmessage = 'Текст элемента (\\'xpath\\', \"//h2[contains(@class, \\'text_type_digits-large\\')]\") не изменился'\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Текст элемента ('xpath', \"//h2[contains(@class, 'text_type_digits-large')]\") не изменился\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "parameters": [{"name": "browser", "value": "'firefox'"}], "start": 1727616641055, "stop": 1727616641055, "uuid": "d08763d5-1447-4ed1-8011-aab199154adf", "historyId": "d24ec0b0084f4b2547b1fe440bdd2ad9", "testCaseId": "a54ea8980d6bf92bf417af7ebcbd7a80", "fullName": "tests.test_order_feed.TestOrderFeed#test_order_history_contains_in_order_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "mchvell-book-m2-pro.local"}, {"name": "thread", "value": "17052-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}